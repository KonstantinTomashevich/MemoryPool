name: Build And Test

on:
  push:
    branches: 
    - master
  pull_request:
    branches: 
    - master

env:
  BUILD_DIRECTORY: Build
  RUNTIME_DIRECTORY: Build/Bin

jobs:
  build_and_test:
    strategy:
      matrix:
        build_type: [Release, Debug]
        # TODO: Add compilers matrix
        platform: [windows-latest, ubuntu-latest, macos-latest]
      fail-fast: false

    runs-on: ${{ matrix.platform }}

    env:
      EXECUTABLE_SUFFIX: ${{ matrix.platform == 'windows-latest' && '.exe' || ''}}
    
    steps:
    - name: Setup Boost using Chocolatey
      shell: bash
      run: choco install boost
      if: matrix.platform == 'windows-latest'

    - name: Setup Boost using Apt-Get
      shell: bash
      run: sudo apt-get install boost
      if: matrix.platform == 'ubuntu-latest'

    - name: Setup Boost using Homebrew
      shell: bash
      run: brew install boost
      if: matrix.platform == 'macos-latest'

    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Setup build environment
      run: cmake -E make_directory ${{github.workspace}}/${{env.BUILD_DIRECTORY}}

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/${{env.BUILD_DIRECTORY}}
      env:
        BUILD_TYPE: ${{matrix.build_type}}
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      shell: bash
      working-directory: ${{github.workspace}}/${{env.BUILD_DIRECTORY}}
      run: cmake --build .

    - name: Test
      shell: bash
      working-directory: ${{github.workspace}}/${{env.RUNTIME_DIRECTORY}}
      run: ./MemoryTest${EXECUTABLE_SUFFIX}

    - name: Run benchmarks
      shell: bash
      working-directory: ${{github.workspace}}/${{env.RUNTIME_DIRECTORY}}
      run: ./MemoryPoolBenchmark${EXECUTABLE_SUFFIX}
